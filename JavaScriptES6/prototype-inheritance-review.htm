<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>
    <script>
        //原型对象
        function User(name, email) {
            this.name = name;
            this.email = email;
            //!!以下的方案 因为js函数也是一个对象，如果在构造函数里写函数，则每次new后调用info方法都会执行info函数，从而又新建了一个对象，这样会大量占用内存
            /*this.info = function() {
                console.log(`Hi, I'm ${this.name}`);
            }*/
        }
        //prototype就可以解决这个问题
        User.prototype.info = function () {
            console.log(`Hi, I'm ${this.name}`);
        }
        User.prototype.description = () => {
            console.log(`I'm a user of codecasts.com`);
        }
        const codecasts = new User('codecasts', 'i@codecasts.com');
        const laravist = new User('laravist', 'i@laravist.com');
    </script>
</body>

</html>
